version: '3.9'

networks:
  mynetwork:
    driver: bridge

services:
  bot:
    container_name: bot
    build:
      context: ./bot
      dockerfile: Dockerfile
    environment:
      TOKEN: ${TOKEN}
      RM_HOST: ${RM_HOST}
      RM_PORT: ${RM_PORT}
      RM_USER: ${RM_USER}
      RM_PASSWORD: ${RM_PASSWORD}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_REPL_USER: ${DB_REPL_USER}
      DB_REPL_PASSWORD: ${DB_REPL_PASSWORD}
      DB_REPL_HOST: ${DB_REPL_HOST}
      DB_REPL_PORT: ${DB_REPL_PORT}
    networks:
      mynetwork:
    depends_on:
      - db
    env_file:
      - .env

  db:
    container_name: db
    build:
      context: ./db
      dockerfile: Dockerfile
    command:
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "listen_addresses=*"
      - "-c"
      - "unix_socket_directories=/var/run/postgresql"
      - "-c"
      - "log_replication_commands=on"
      - "-c"
      - "archive_mode=on"
      - "-c"
      - "archive_command='cp %p /oracle/pg_data/archive/%f'"
      - "-c"
      - "max_wal_senders=10"
      - "-c"
      - "wal_level=replica"
      - "-c"
      - "wal_log_hints=on"
      - "-c"
      - "password_encryption=scram-sha-256"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      ${DB_PORT}:5432
    networks:
      mynetwork:
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
      - /tmp/:/tmp/

  db_repl:
    container_name: db_repl
    build:
      context: ./db_repl
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${DB_REPL_USER}
      POSTGRES_PASSWORD: ${DB_REPL_PASSWORD}
    command: |
      bash -c "
      until PGPASSWORD=${DB_REPL_PASSWORD} pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --username=${DB_REPL_USER}
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chown -R postgres:postgres /var/lib/postgresql/data
      chmod 0700 /var/lib/postgresql/data
      su - postgres -c '/usr/lib/postgresql/14/bin/postgres -D /var/lib/postgresql/data'
      "
    networks:
      mynetwork:
      ports:
        - ${DB_REPL_PORT}:5432
    depends_on:
      - db
    env_file:
      - .env

volumes:
  db_data:
